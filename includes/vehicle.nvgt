bool invehicle;
vehicle@[]vehicles(0);
class vehicle
{
bool fireable, moveable;
int beepsound, hurtsound, defsound, speedsound, vehsound, turnsound, wepsound;
double vehhealth;
double vehmaxhealth;
int damage;
int vehx;
int vehy;
int vehdir;
int vehspeed;
int vehtime;
string vehtype;
timer vehtimer;
vehicle(int vx,int vy,double hp,double maxhp,int dm,string vt,bool vf)
{
vehx=vx;
vehy=vy;
vehhealth=hp;
vehmaxhealth=maxhp;
damage=dm;
vehtype=vt;
fireable=vf;
invehicle=false;
vehsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehtype+"/*beacon*"),me.x,me.y,vehx,vehy,0,0,0,0,true,0,0,carvolume,carpitch,false);
vehpool.update_sound_2d(vehsound,vehx,vehy);
}
}
void vehloop()
{
for(uint i=0; i<vehicles.length(); i++)
{
if(vehicles[i].vehdir==1 and vehicles[i].vehtimer.elapsed>=vehicles[i].vehtime and vehicles[i].moveable==true)
{
me.x++;
vehicles[i].vehx++;
vehicles[i].vehtimer.restart();
}
else if(vehicles[i].vehdir==0 and vehicles[i].vehtimer.elapsed>=vehicles[i].vehtime and vehicles[i].moveable==true)
{
me.x--;
vehicles[i].vehx--;
vehicles[i].vehtimer.restart();
}
if(me.x==vehicles[i].vehx and me.y==vehicles[i].vehy and key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT) and key_repeating(KEY_RETURN))
{
if(vehicles[i].moveable==false)
{
cammable=false;
jumpable=false;
moveable=false;
speedable=false;
spiable=false;
sittable=false;
turnable=false;
telable=false;
speak("moving");
vehpool.destroy_sound(vehicles[i].vehsound);
vehicles[i].vehsound=vehpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*motor*"),true,0,0,carvolume,carpitch,false);
facing="right";
vehicles[i].vehdir=1;
vehicles[i].vehspeed=5;
invehicle=true;
vehicles[i].moveable=true;
}
else if(vehicles[i].moveable==true)
{
cammable=true;
jumpable=true;
moveable=true;
speedable=true;
spiable=true;
sittable=true;
turnable=true;
telable=true;
speak("stopped");
vehpool.destroy_sound(vehicles[i].vehsound);
vehicles[i].vehsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*beacon*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,true,0,0,carvolume,carpitch,false);
facing="left";
vehicles[i].vehdir=0;
vehicles[i].vehspeed=5;
invehicle=false;
vehicles[i].moveable=false;
}
}
if(key_pressed(KEY_SPACE) and vehicles[i].moveable==true and paused==0)
{
vehicles[i].beepsound=vehpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*horn*"),true,0,0,carvolume,carpitch,false);
vehpool.update_sound_start_values(vehicles[i].beepsound,carpan, carvolume, carpitch);
}
if(key_released(KEY_SPACE) and vehicles[i].moveable==true and paused==0)
{
vehpool.destroy_sound(vehicles[i].beepsound);
vehpool.update_sound_start_values(vehicles[i].beepsound,carpan, carvolume, carpitch);
}
if(spiable==false)
{
if(key_pressed(KEY_LEFT) and key_up(KEY_LSHIFT) and key_up(KEY_RSHIFT) and vehicles[i].vehdir!=0 and vehicles[i].moveable==true and paused==0)
{
facing="left";
speak(facing);
vehicles[i].turnsound=vehpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*turn*"),false,0,0,carvolume,carpitch,false);
vehicles[i].vehdir=0;
}
if(key_pressed(KEY_RIGHT) and vehicles[i].vehdir!=1 and vehicles[i].moveable==true  and paused==0)
{
facing="right";
speak(facing);
vehicles[i].turnsound=vehpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*turn*"),false,0,0,carvolume,carpitch,false);
vehicles[i].vehdir=1;
}
if(key_pressed(KEY_UP) and vehicles[i].vehspeed!=10 and vehicles[i].moveable==true and paused==0)
{
vehicles[i].speedsound=vehpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*speed*"),false,0,0,carvolume,carpitch,false);
speak(vehicles[i].vehspeed+1);
vehicles[i].vehspeed+=1;
}
if(key_pressed(KEY_DOWN) and vehicles[i].vehspeed!=1 and vehicles[i].moveable==true and paused==0)
{
vehicles[i].speedsound=vehpool.play_stationary_extended(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*speed*"),false,0,0,carvolume,carpitch,false);
speak(vehicles[i].vehspeed-1);
vehicles[i].vehspeed-=1;
}
}
if(paused==1)
{
vehpool.pause_sound(vehicles[i].vehsound);
}
else
{
vehpool.resume_sound(vehicles[i].vehsound);
}
if(vehicles[i].vehspeed>=1)
{
vehpool.update_sound_start_values(vehicles[i].vehsound,carpan, carvolume, carpitch);
carpitch=20*vehicles[i].vehspeed;
vehicles[i].vehtime=500/vehicles[i].vehspeed;
}
if(me.x<=0 and vehicles[i].vehx<=0)
{
if(vehicles[i].vehspeed>=1 and vehicles[i].vehspeed<=5)
{
vehicles[i].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hurt*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
facing="right";
vehicles[i].vehdir=1;
}
else if(vehicles[i].vehspeed>=6 and vehicles[i].vehspeed<=10)
{
cammable=true;
jumpable=true;
moveable=true;
speedable=true;
spiable=true;
sittable=true;
turnable=true;
telable=true;
vehpool.destroy_sound(vehicles[i].beepsound);
vehpool.destroy_sound(vehicles[i].hurtsound);
vehpool.destroy_sound(vehicles[i].vehsound);
vehicles[i].defsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*death*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i].vehspeed=5;
invehicle=false;
vehicles[i].moveable=false;
vehicles.remove_at(i);
return;
}
}
if(me.x>=maxx and vehicles[i].vehx>=maxx)
{
if(vehicles[i].vehspeed>=1 and vehicles[i].vehspeed<=5)
{
vehicles[i].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hurt*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
facing="left";
vehicles[i].vehdir=0;
}
else if(vehicles[i].vehspeed>=6 and vehicles[i].vehspeed<=10)
{
cammable=true;
jumpable=true;
moveable=true;
speedable=true;
spiable=true;
sittable=true;
turnable=true;
telable=true;
vehpool.destroy_sound(vehicles[i].beepsound);
vehpool.destroy_sound(vehicles[i].hurtsound);
vehpool.destroy_sound(vehicles[i].vehsound);
vehicles[i].defsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*death*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i].vehspeed=5;
invehicle=false;
vehicles[i].moveable=false;
vehicles.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==vehicles[i].vehx and animals[i1].amy==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=vehicles[i].damage;
}
}
for(uint i2=0; i2<humans.length(); i2++)
{
if(humans[i2].humx==vehicles[i].vehx and humans[i2].humy==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i2].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i2].humantype+"/*hurt*"),me.x,me.y,humans[i2].humx,humans[i2].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i2].humanhealth-=vehicles[i].damage;
}
}
for(uint i3=0; i3<projectiles.length(); i3++)
{
if(projectiles[i3].prox==vehicles[i].vehx and projectiles[i3].proy==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i3].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i3].projtype+"/*hurt*"),me.x,me.y,projectiles[i3].prox,projectiles[i3].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i3].projhealth-=vehicles[i].damage;
}
}
for(uint i4=0; i4<robots.length(); i4++)
{
if(robots[i4].robx==vehicles[i].vehx and robots[i4].roby==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i4].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i4].robottype+"/*hurt*"),me.x,me.y,robots[i4].robx,robots[i4].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i4].robothealth-=vehicles[i].damage;
}
}
for(uint i5=0; i5<turrets.length(); i5++)
{
if(turrets[i5].turx==vehicles[i].vehx and turrets[i5].tury==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i5].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i5].turtype+"/*hurt*"),me.x,me.y,turrets[i5].turx,turrets[i5].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i5].turhealth-=vehicles[i].damage;
}
}
for(uint i6=0; i6<zombies.length(); i6++)
{
if(zombies[i6].zombx==vehicles[i].vehx and zombies[i6].zomby==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i6].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i6].zombietype+"/*hurt*"),me.x,me.y,zombies[i6].zombx,zombies[i6].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i6].zombiehealth-=vehicles[i].damage;
}
}
for(uint i7=0; i7<bosses.length(); i7++)
{
if(bosses[i7].bossx==vehicles[i].vehx and bosses[i7].bossy==vehicles[i].vehy and vehicles[i].fireable==true and invehicle==true)
{
vehicles[i].wepsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*hit*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i7].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i7].bosstype+"/*hurt*"),me.x,me.y,bosses[i7].bossx,bosses[i7].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i7].bosshealth-=vehicles[i].damage;
}
}
if(vehicles[i].vehhealth<=0)
{
cammable=true;
jumpable=true;
moveable=true;
speedable=true;
spiable=true;
sittable=true;
turnable=true;
telable=true;
vehpool.destroy_sound(vehicles[i].beepsound);
vehpool.destroy_sound(vehicles[i].hurtsound);
vehpool.destroy_sound(vehicles[i].vehsound);
vehicles[i].defsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i].vehtype+"/*death*"),me.x,me.y,vehicles[i].vehx,vehicles[i].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i].vehspeed=5;
invehicle=false;
vehicles[i].moveable=false;
vehicles.remove_at(i);
return;
}
}
}
void spawn_vehicle(int x,int y,double hp,double maxhp,int dm,string vehtype,bool fireable)
{
vehicle v1(x,y,hp,maxhp,dm,vehtype,fireable);
vehicles.insert_last(v1);
}
void destroy_all_vehicles()
{
for(uint i=0; i<vehicles.length(); i++)
{
vehpool.destroy_sound(vehicles[i].beepsound);
vehpool.destroy_sound(vehicles[i].vehsound);
}
vehicles.resize(0);
}
