bullet@[]bullets(0);
class bullet
{
bool scaddering;
int bullsound, wepsound;
int bullx;
int bully;
int range;
int range2;
int damage;
int speed;
string direction;
string bulltype;
string bulltype2;
timer speedtimer;
bullet(int bx,int by,int br,int br2,int dmg,int sp,string dr,string bt,string bt2,bool sd)
{
bullx=bx;
bully=by;
range=br;
range2=br2;
damage=dmg;
speed=sp;
direction=dr;
bulltype=bt;
bulltype2=bt2;
scaddering=sd;
if(weploopsound==1) bullsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bulltype+"/"+bulltype2+"/*loop*"),me.x,me.y,bullx,bully,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void bull_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void bulletloop()
{
for(uint i=0; i<bullets.length(); i++)
{
if(bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bulletpool.update_sound_2d(bullets[i].bullsound,bullets[i].bullx,bullets[i].bully);
bullets[i].speedtimer.restart();
if(bullets[i].direction=="right")
{
bullets[i].bullx++;
}
if(bullets[i].direction=="left")
{
bullets[i].bullx--;
}
if(bullets[i].direction=="up")
{
bullets[i].bully++;
}
if(bullets[i].direction=="down")
{
bullets[i].bully--;
}
if(string_contains(gmt(bullets[i].bullx,bullets[i].bully),"wall",1)>-1)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(weprecsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*rico*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bullets[i].bull_bounce();
}
if(me.x==bullets[i].bullx and me.y==bullets[i].bully and shieldon==1 and invehicle==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=bullets[i].damage-shielddefence;
bullets.remove_at(i);
return;
}
else if(me.x==bullets[i].bullx and me.y==bullets[i].bully and shieldon==0 and invehicle==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=bullets[i].damage-defence;
hearttime-=bullets[i].damage-defence;
bullets.remove_at(i);
return;
}
if(absolute(bullets[i].bullx-me.x)>bullets[i].range or absolute(bullets[i].bully-me.y)>bullets[i].range2)
{
bulletpool.destroy_sound(bullets[i].bullsound);
bullets.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==bullets[i].bullx and animals[i1].amy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==bullets[i].bullx and calanders[i2].calandery==bullets[i].bully and calanders[i2].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==bullets[i].bullx and clocks[i3].clocky==bullets[i].bully and clocks[i3].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==bullets[i].bullx and doors[i4].starty==bullets[i].bully and doors[i4].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i5=0; i5<enemies.length(); i5++)
{
if(enemies[i5].emx==bullets[i].bullx and enemies[i5].emy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
enemies[i5].hurtsound=enemiepool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/enemies/"+enemies[i5].enemietype+"/*hurt*"),me.x,me.y,enemies[i5].emx,enemies[i5].emy,0,0,0,0,false,0,0,painvolume,painpitch,false);
enemies[i5].enemiehealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==bullets[i].bullx and objs[i6].ity==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==bullets[i].bullx and projectiles[i7].proy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==bullets[i].bullx and robots[i8].roby==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==bullets[i].bullx and signs[i9].signy==bullets[i].bully and signs[i9].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=bullets[i].bullx and spikes[i10].maxx>=bullets[i].bullx and spikes[i10].miny<=bullets[i].bully and spikes[i10].maxy>=bullets[i].bully and spikes[i10].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==bullets[i].bullx and turrets[i11].tury==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==bullets[i].bullx and vehicles[i12].vehy==bullets[i].bully and vehicles[i12].moveable==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=bullets[i].bullx and dest_walls[i13].maxx>=bullets[i].bullx and dest_walls[i13].miny<=bullets[i].bully and dest_walls[i13].maxy>=bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==bullets[i].bullx and zombies[i14].zomby==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==bullets[i].bullx and psdoors[i15].starty==bullets[i].bully and psdoors[i15].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==bullets[i].bullx and bosses[i16].bossy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==bullets[i].bullx and helpers[i17].helpy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
}
}
void spawn_bullet(int x,int y,int range,int range2,int damage,int speed,string direction,string bulltype,string bulltype2,bool scaddering)
{
bullet bl1(x,y,range,range2,damage,speed,direction,bulltype,bulltype2,scaddering);
bullets.insert_last(bl1);
}
void destroy_all_bullets()
{
for(uint i=0; i<bullets.length(); i++)
{
bulletpool.destroy_sound(bullets[i].bullsound);
}
bullets.resize(0);
}

void checkwepslots()
{
if(shift_is_down())
{
if(key_repeating(KEY_GRAVE))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="asault ryfel";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="lazer cannon";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="club";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_1))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="asault ryfel 2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="medium cannon";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="club2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_2))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="asault ryfel3";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="rocket launcher";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="combat_knife";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_3))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="average gun";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="rocket launcher2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_4))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="average gun2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="rpg launcher";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_5))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="banelli";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="sticky bomb";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_6))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="barretM82 snyper";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_7))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="barrit snyper ryfel";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_8))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="bazooka";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_9))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="bereta m 1951 machine pistal";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_0))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="bereta m9 pistal";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_MINUS))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="blz83 portable machinegun";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crowbar";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_EQUALS))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="broken ryfel";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crt17 combat_knife";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_BACK))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="browning_high_power_bda_handgun";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="dagger";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
}
if(key_repeating(KEY_GRAVE))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="arrow gun";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="9MM Uzi";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="big cannon";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="axe";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_1))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="arrow launcher";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="12 gage shotgun";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="bottle bomb";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="axe2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_2))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crossbow";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="AA12";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="claymorebomb";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="axe3";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_3))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crossbow2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="AA12 2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="fireball";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="baseball";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_4))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="Crossbow3";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="ACR";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="firebomb";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="baseball bat";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_5))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crossbow4";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="admingun";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="firestar";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="beer boddle";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_6))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crossbow5";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="admingun2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="flame thrower";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="boomerang";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_7))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="crossbow6";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="ads30";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="gass cannister";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="boomerang2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_8))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="dart launcher";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="AK47";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="grenade";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="branch";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_9))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="hunting bow";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="AK47 2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="grenade2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="brass knuckles";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_0))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="small bow";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="AK47 3";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="grenade3";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="braud sword";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_MINUS))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="small bow2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="anzo";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="chainsaw";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_EQUALS))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="water launcher";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="ar15";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="clause";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
if(key_repeating(KEY_BACK))
{
if(weapontype=="archery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="water launcher2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="artillery" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="AR15 2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="explosive" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
if(weapontype=="melee" and drawable==true)
{
p.destroy_sound(weaponslot);
destroy_all_weapons();
weaponparse();
weapontype2="clause2";
speak(weapontype2+" "+"equipped");
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
}
void draw_weapon(string weapon_name,string weapon_name2,int wep_range,int wep_range2,int wep_damage,int wep_speed,int wep_maxammo,bool is_melee)
{
weapontype=weapon_name;
weapontype2=weapon_name2;
weprange=wep_range;
weprange2=wep_range2;
wepdamage=wep_damage;
wepspeed=wep_speed;
if(is_melee==false)
{
maxammo=wep_maxammo;
melee=false;
}
if(is_melee==true)
{
melee=true;
}
speak(weapon_name2+";"+"equipped");
if(wep_maxammo<loadedammo)
{
loadedammo=wep_maxammo;
}
if(wepdrawsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapon_name+"/"+weapon_name2+"/*draw*"),false,0,0,weaponvolume,weaponpitch,false);
}
void reload_weapon()
{
if(ammo<=0)
{
if(wepemptysound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*empty*"),false,0,0,weaponvolume,weaponpitch,false);
speak("No ammo.");
}
else
{
int am;
if(ammo<maxammo)
{
am=ammo;
}
if(ammo>=maxammo)
{
am=maxammo;
if(loadedammo<maxammo and loadedammo>0)
{
am=maxammo-loadedammo;
}
}
loadedammo+=am;
ammo-=am; 
if(wepreloadsound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*reload*"),false,0,0,weaponvolume,weaponpitch,false);
}
}
void spawn_bltdir(int bltmode)
{
bullmode=bltmode;
if(bltmode==0)
{
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, facing, weapontype, weapontype2, scadder);
}
if(bltmode==1)
{
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "left", weapontype, weapontype2, scadder);
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "right", weapontype, weapontype2, scadder);
}
if(bltmode==2)
{
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "up", weapontype, weapontype2, scadder);
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "down", weapontype, weapontype2, scadder);
}
if(bltmode==3)
{
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "left", weapontype, weapontype2, scadder);
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "right", weapontype, weapontype2, scadder);
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "up", weapontype, weapontype2, scadder);
spawn_bullet(me.x, me.y, weprange, weprange2, wepdamage+attack, wepspeed, "down", weapontype, weapontype2, scadder);
}
}
void auto_fire_weapon()
{
if(weapontype2==""==false and wephold==1 and weapontimer.elapsed>=weapontime and fireable==true and useitems==false)
{
weapontimer.restart();
if(loadedammo==0 and melee==false)
{
if(wepemptysound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*empty*"),false,0,0,weaponvolume,weaponpitch,false);
}
else
{
if(wepfiresound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*fire*"),false,0,0,weaponvolume,weaponpitch,false);
spawn_bltdir(bullmode);
if(melee==false)
{
loadedammo-=1;
}
}
}
}
void manule_fire_weapon()
{
if(weapontype2==""==false and wephold==0 and weapontimer2.elapsed>=weapontime2 and fireable==true and useitems==false)
{
weapontimer2.restart();
if(loadedammo==0 and melee==false)
{
if(wepemptysound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*empty*"),false,0,0,weaponvolume,weaponpitch,false);
}
else
{
if(charswingsound==1 and weapontype=="melee") weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*swing*"),false,0,0,weaponvolume,weaponpitch,false);
if(wepfiresound==1) weaponslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/weapons/"+weapontype+"/"+weapontype2+"/*fire*"),false,0,0,weaponvolume,weaponpitch,false);
spawn_bltdir(bullmode);
if(melee==false)
{
loadedammo-=1;
}
}
}
}
