arro@[]arros(0);
class arro
{
int arrosound, wepsound;
int arrox;
int arroy;
int range;
int range2;
int damage;
int speed;
string direction;
string arrotype;
string arrotype2;
timer speedtimer;
arro(int arx,int ary,int arr,int arr2,int dmg,int sp,string dr,string art,string art2)
{
arrox=arx;
arroy=ary;
range=arr;
range2=arr2;
damage=dmg;
speed=sp;
direction=dr;
arrotype=art;
arrotype2=art2;
if(weploopsound==1) arrosound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arrotype+"/"+arrotype2+"/*loop*"),me.x,me.y,arrox,arroy,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void arro_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void arroloop()
{
for(uint i=0; i<arros.length(); i++)
{
if(arros[i].speedtimer.elapsed>=arros[i].speed)
{
arropool.update_sound_2d(arros[i].arrosound,arros[i].arrox,arros[i].arroy);
arros[i].speedtimer.restart();
if(arros[i].direction=="right")
{
arros[i].arrox++;
}
if(arros[i].direction=="left")
{
arros[i].arrox--;
}
if(arros[i].direction=="up")
{
arros[i].arroy++;
}
if(arros[i].direction=="down")
{
arros[i].arroy--;
}
if(string_contains(gmt(arros[i].arrox,arros[i].arroy),"wall",1)>-1)
{
arropool.destroy_sound(arros[i].arrosound);
if(weprecsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*rico*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
arros[i].arro_bounce();
}
if(me.x==arros[i].arrox and me.y==arros[i].arroy and shieldon==1 and invehicle==false)
{
arropool.destroy_sound(arros[i].arrosound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=arros[i].damage-shielddefence;
arros.remove_at(i);
return;
}
else if(me.x==arros[i].arrox and me.y==arros[i].arroy and shieldon==0 and invehicle==false)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=arros[i].damage-defence;
hearttime-=arros[i].damage-defence;
arros.remove_at(i);
return;
}
if(absolute(arros[i].arrox-me.x)>arros[i].range or absolute(arros[i].arroy-me.y)>arros[i].range2)
{
arropool.destroy_sound(arros[i].arrosound);
arros.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==arros[i].arrox and animals[i1].amy==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==arros[i].arrox and calanders[i2].calandery==arros[i].arroy and calanders[i2].destroyable==true)
{
arropool.destroy_sound(arros[i].arrosound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
arros.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==arros[i].arrox and clocks[i3].clocky==arros[i].arroy and clocks[i3].destroyable==true)
{
arropool.destroy_sound(arros[i].arrosound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
arros.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==arros[i].arrox and doors[i4].starty==arros[i].arroy and doors[i4].destroyable==true)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==arros[i].arrox and humans[i5].humy==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==arros[i].arrox and objs[i6].ity==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
arros.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==arros[i].arrox and projectiles[i7].proy==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==arros[i].arrox and robots[i8].roby==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==arros[i].arrox and signs[i9].signy==arros[i].arroy and signs[i9].destroyable==true)
{
arropool.destroy_sound(arros[i].arrosound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
arros.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=arros[i].arrox and spikes[i10].maxx>=arros[i].arrox and spikes[i10].miny<=arros[i].arroy and spikes[i10].maxy>=arros[i].arroy and spikes[i10].destroyable==true)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==arros[i].arrox and turrets[i11].tury==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==arros[i].arrox and vehicles[i12].vehy==arros[i].arroy and vehicles[i12].moveable==false)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=arros[i].arrox and dest_walls[i13].maxx>=arros[i].arrox and dest_walls[i13].miny<=arros[i].arroy and dest_walls[i13].maxy>=arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==arros[i].arrox and zombies[i14].zomby==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==arros[i].arrox and psdoors[i15].starty==arros[i].arroy and psdoors[i15].destroyable==true)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==arros[i].arrox and bosses[i16].bossy==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==arros[i].arrox and helpers[i17].helpy==arros[i].arroy)
{
arropool.destroy_sound(arros[i].arrosound);
if(wephitsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*hit*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) arros[i].wepsound=arropool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+arros[i].arrotype+"/"+arros[i].arrotype2+"/*shell*"),me.x,me.y,arros[i].arrox,arros[i].arroy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=arros[i].damage;
arros.remove_at(i);
return;
}
}
}
}
void spawn_arro(int x,int y,int range,int range2,int damage,int speed,string direction,string arrotype,string arrotype2)
{
arro bl1(x,y,range,range2,damage,speed,direction,arrotype,arrotype2);
arros.insert_last(bl1);
}
void destroy_all_arros()
{
for(uint i=0; i<arros.length(); i++)
{
arropool.destroy_sound(arros[i].arrosound);
}
arros.resize(0);
}

bullet@[]bullets(0);
class bullet
{
int bullsound, wepsound;
int bullx;
int bully;
int range;
int range2;
int damage;
int speed;
string direction;
string bulltype;
string bulltype2;
timer speedtimer;
bullet(int bx,int by,int br,int br2,int dmg,int sp,string dr,string bt,string bt2)
{
bullx=bx;
bully=by;
range=br;
range2=br2;
damage=dmg;
speed=sp;
direction=dr;
bulltype=bt;
bulltype2=bt2;
if(weploopsound==1) bullsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bulltype+"/"+bulltype2+"/*loop*"),me.x,me.y,bullx,bully,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void bull_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void bulletloop()
{
for(uint i=0; i<bullets.length(); i++)
{
if(bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bulletpool.update_sound_2d(bullets[i].bullsound,bullets[i].bullx,bullets[i].bully);
bullets[i].speedtimer.restart();
if(bullets[i].direction=="right")
{
bullets[i].bullx++;
}
if(bullets[i].direction=="left")
{
bullets[i].bullx--;
}
if(bullets[i].direction=="up")
{
bullets[i].bully++;
}
if(bullets[i].direction=="down")
{
bullets[i].bully--;
}
if(string_contains(gmt(bullets[i].bullx,bullets[i].bully),"wall",1)>-1)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(weprecsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*rico*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bullets[i].bull_bounce();
}
if(me.x==bullets[i].bullx and me.y==bullets[i].bully and shieldon==1 and invehicle==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=bullets[i].damage-shielddefence;
bullets.remove_at(i);
return;
}
else if(me.x==bullets[i].bullx and me.y==bullets[i].bully and shieldon==0 and invehicle==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=bullets[i].damage-defence;
hearttime-=bullets[i].damage-defence;
bullets.remove_at(i);
return;
}
if(absolute(bullets[i].bullx-me.x)>bullets[i].range or absolute(bullets[i].bully-me.y)>bullets[i].range2)
{
bulletpool.destroy_sound(bullets[i].bullsound);
bullets.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==bullets[i].bullx and animals[i1].amy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==bullets[i].bullx and calanders[i2].calandery==bullets[i].bully and calanders[i2].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==bullets[i].bullx and clocks[i3].clocky==bullets[i].bully and clocks[i3].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==bullets[i].bullx and doors[i4].starty==bullets[i].bully and doors[i4].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==bullets[i].bullx and humans[i5].humy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==bullets[i].bullx and objs[i6].ity==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==bullets[i].bullx and projectiles[i7].proy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==bullets[i].bullx and robots[i8].roby==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==bullets[i].bullx and signs[i9].signy==bullets[i].bully and signs[i9].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
bullets.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=bullets[i].bullx and spikes[i10].maxx>=bullets[i].bullx and spikes[i10].miny<=bullets[i].bully and spikes[i10].maxy>=bullets[i].bully and spikes[i10].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==bullets[i].bullx and turrets[i11].tury==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==bullets[i].bullx and vehicles[i12].vehy==bullets[i].bully and vehicles[i12].moveable==false)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=bullets[i].bullx and dest_walls[i13].maxx>=bullets[i].bullx and dest_walls[i13].miny<=bullets[i].bully and dest_walls[i13].maxy>=bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==bullets[i].bullx and zombies[i14].zomby==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==bullets[i].bullx and psdoors[i15].starty==bullets[i].bully and psdoors[i15].destroyable==true)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==bullets[i].bullx and bosses[i16].bossy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==bullets[i].bullx and helpers[i17].helpy==bullets[i].bully)
{
bulletpool.destroy_sound(bullets[i].bullsound);
if(wephitsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*hit*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) bullets[i].wepsound=bulletpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+bullets[i].bulltype+"/"+bullets[i].bulltype2+"/*shell*"),me.x,me.y,bullets[i].bullx,bullets[i].bully,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=bullets[i].damage;
bullets.remove_at(i);
return;
}
}
}
}
void spawn_bullet(int x,int y,int range,int range2,int damage,int speed,string direction,string bulltype,string bulltype2)
{
bullet bl1(x,y,range,range2,damage,speed,direction,bulltype,bulltype2);
bullets.insert_last(bl1);
}
void destroy_all_bullets()
{
for(uint i=0; i<bullets.length(); i++)
{
bulletpool.destroy_sound(bullets[i].bullsound);
}
bullets.resize(0);
}

canon@[]canons(0);
class canon
{
int canonsound, wepsound;
int canonx;
int canony;
int range;
int range2;
int damage;
int speed;
string direction;
string canontype;
string canontype2;
timer speedtimer;
canon(int cnx,int cny,int cnr,int cnr2,int dmg,int sp,string dr,string cnt,string cnt2)
{
canonx=cnx;
canony=cny;
range=cnr;
range2=cnr2;
damage=dmg;
speed=sp;
direction=dr;
canontype=cnt;
canontype2=cnt2;
if(weploopsound==1) canonsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canontype+"/"+canontype2+"/*loop*"),me.x,me.y,canonx,canony,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void canon_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void canonloop()
{
for(uint i=0; i<canons.length(); i++)
{
if(canons[i].speedtimer.elapsed>=canons[i].speed)
{
canonpool.update_sound_2d(canons[i].canonsound,canons[i].canonx,canons[i].canony);
canons[i].speedtimer.restart();
if(canons[i].direction=="right")
{
canons[i].canonx++;
}
if(canons[i].direction=="left")
{
canons[i].canonx--;
}
if(canons[i].direction=="up")
{
canons[i].canony++;
}
if(canons[i].direction=="down")
{
canons[i].canony--;
}
if(string_contains(gmt(canons[i].canonx,canons[i].canony),"wall",1)>-1)
{
canonpool.destroy_sound(canons[i].canonsound);
if(weprecsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*rico*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
canons[i].canon_bounce();
}
if(me.x==canons[i].canonx and me.y==canons[i].canony and shieldon==1 and invehicle==false)
{
canonpool.destroy_sound(canons[i].canonsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=canons[i].damage-shielddefence;
canons.remove_at(i);
return;
}
else if(me.x==canons[i].canonx and me.y==canons[i].canony and shieldon==0 and invehicle==false)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=canons[i].damage-defence;
hearttime-=canons[i].damage-defence;
canons.remove_at(i);
return;
}
if(absolute(canons[i].canonx-me.x)>canons[i].range or absolute(canons[i].canony-me.y)>canons[i].range2)
{
canonpool.destroy_sound(canons[i].canonsound);
canons.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==canons[i].canonx and animals[i1].amy==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==canons[i].canonx and calanders[i2].calandery==canons[i].canony and calanders[i2].destroyable==true)
{
canonpool.destroy_sound(canons[i].canonsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
canons.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==canons[i].canonx and clocks[i3].clocky==canons[i].canony and clocks[i3].destroyable==true)
{
canonpool.destroy_sound(canons[i].canonsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
canons.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==canons[i].canonx and doors[i4].starty==canons[i].canony and doors[i4].destroyable==true)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==canons[i].canonx and humans[i5].humy==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==canons[i].canonx and objs[i6].ity==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
canons.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==canons[i].canonx and projectiles[i7].proy==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==canons[i].canonx and robots[i8].roby==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==canons[i].canonx and signs[i9].signy==canons[i].canony and signs[i9].destroyable==true)
{
canonpool.destroy_sound(canons[i].canonsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
canons.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=canons[i].canonx and spikes[i10].maxx>=canons[i].canonx and spikes[i10].miny<=canons[i].canony and spikes[i10].maxy>=canons[i].canony and spikes[i10].destroyable==true)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==canons[i].canonx and turrets[i11].tury==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==canons[i].canonx and vehicles[i12].vehy==canons[i].canony and vehicles[i12].moveable==false)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=canons[i].canonx and dest_walls[i13].maxx>=canons[i].canonx and dest_walls[i13].miny<=canons[i].canony and dest_walls[i13].maxy>=canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==canons[i].canonx and zombies[i14].zomby==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==canons[i].canonx and psdoors[i15].starty==canons[i].canony and psdoors[i15].destroyable==true)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==canons[i].canonx and bosses[i16].bossy==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==canons[i].canonx and helpers[i17].helpy==canons[i].canony)
{
canonpool.destroy_sound(canons[i].canonsound);
if(wephitsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*hit*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) canons[i].wepsound=canonpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+canons[i].canontype+"/"+canons[i].canontype2+"/*shell*"),me.x,me.y,canons[i].canonx,canons[i].canony,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=canons[i].damage;
canons.remove_at(i);
return;
}
}
}
}
void spawn_canon(int x,int y,int range,int range2,int damage,int speed,string direction,string canontype,string canontype2)
{
canon bl1(x,y,range,range2,damage,speed,direction,canontype,canontype2);
canons.insert_last(bl1);
}
void destroy_all_canons()
{
for(uint i=0; i<canons.length(); i++)
{
canonpool.destroy_sound(canons[i].canonsound);
}
canons.resize(0);
}

dart@[]darts(0);
class dart
{
int dartsound, wepsound;
int dartx;
int darty;
int range;
int range2;
int damage;
int speed;
string direction;
string darttype;
string darttype2;
timer speedtimer;
dart(int dax,int day,int dar,int dar2,int dmg,int sp,string dr,string dat,string dat2)
{
dartx=dax;
darty=day;
range=dar;
range2=dar2;
damage=dmg;
speed=sp;
direction=dr;
darttype=dat;
darttype2=dat2;
if(weploopsound==1) dartsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darttype+"/"+darttype2+"/*loop*"),me.x,me.y,dartx,darty,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void dart_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void dartloop()
{
for(uint i=0; i<darts.length(); i++)
{
if(darts[i].speedtimer.elapsed>=darts[i].speed)
{
dartpool.update_sound_2d(darts[i].dartsound,darts[i].dartx,darts[i].darty);
darts[i].speedtimer.restart();
if(darts[i].direction=="right")
{
darts[i].dartx++;
}
if(darts[i].direction=="left")
{
darts[i].dartx--;
}
if(darts[i].direction=="up")
{
darts[i].darty++;
}
if(darts[i].direction=="down")
{
darts[i].darty--;
}
if(string_contains(gmt(darts[i].dartx,darts[i].darty),"wall",1)>-1)
{
dartpool.destroy_sound(darts[i].dartsound);
if(weprecsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*rico*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
darts[i].dart_bounce();
}
if(me.x==darts[i].dartx and me.y==darts[i].darty and shieldon==1 and invehicle==false)
{
dartpool.destroy_sound(darts[i].dartsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=darts[i].damage-shielddefence;
darts.remove_at(i);
return;
}
else if(me.x==darts[i].dartx and me.y==darts[i].darty and shieldon==0 and invehicle==false)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=darts[i].damage-defence;
hearttime-=darts[i].damage-defence;
darts.remove_at(i);
return;
}
if(absolute(darts[i].dartx-me.x)>darts[i].range or absolute(darts[i].darty-me.y)>darts[i].range2)
{
dartpool.destroy_sound(darts[i].dartsound);
darts.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==darts[i].dartx and animals[i1].amy==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==darts[i].dartx and calanders[i2].calandery==darts[i].darty and calanders[i2].destroyable==true)
{
dartpool.destroy_sound(darts[i].dartsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
darts.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==darts[i].dartx and clocks[i3].clocky==darts[i].darty and clocks[i3].destroyable==true)
{
dartpool.destroy_sound(darts[i].dartsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
darts.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==darts[i].dartx and doors[i4].starty==darts[i].darty and doors[i4].destroyable==true)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==darts[i].dartx and humans[i5].humy==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==darts[i].dartx and objs[i6].ity==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
darts.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==darts[i].dartx and projectiles[i7].proy==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==darts[i].dartx and robots[i8].roby==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==darts[i].dartx and signs[i9].signy==darts[i].darty and signs[i9].destroyable==true)
{
dartpool.destroy_sound(darts[i].dartsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
darts.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=darts[i].dartx and spikes[i10].maxx>=darts[i].dartx and spikes[i10].miny<=darts[i].darty and spikes[i10].maxy>=darts[i].darty and spikes[i10].destroyable==true)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==darts[i].dartx and turrets[i11].tury==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==darts[i].dartx and vehicles[i12].vehy==darts[i].darty and vehicles[i12].moveable==false)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=darts[i].dartx and dest_walls[i13].maxx>=darts[i].dartx and dest_walls[i13].miny<=darts[i].darty and dest_walls[i13].maxy>=darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==darts[i].dartx and zombies[i14].zomby==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==darts[i].dartx and psdoors[i15].starty==darts[i].darty and psdoors[i15].destroyable==true)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==darts[i].dartx and bosses[i16].bossy==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==darts[i].dartx and helpers[i17].helpy==darts[i].darty)
{
dartpool.destroy_sound(darts[i].dartsound);
if(wephitsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*hit*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) darts[i].wepsound=dartpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+darts[i].darttype+"/"+darts[i].darttype2+"/*shell*"),me.x,me.y,darts[i].dartx,darts[i].darty,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=darts[i].damage;
darts.remove_at(i);
return;
}
}
}
}
void spawn_dart(int x,int y,int range,int range2,int damage,int speed,string direction,string darttype,string darttype2)
{
dart bl1(x,y,range,range2,damage,speed,direction,darttype,darttype2);
darts.insert_last(bl1);
}
void destroy_all_darts()
{
for(uint i=0; i<darts.length(); i++)
{
dartpool.destroy_sound(darts[i].dartsound);
}
darts.resize(0);
}

food@[]foods(0);
class food
{
int foodsound, wepsound;
int foodx;
int foody;
int range;
int range2;
int damage;
int speed;
string direction;
string foodtype;
string foodtype2;
timer speedtimer;
food(int fox,int foy,int forr,int forr2,int dmg,int sp,string dr,string fot,string fot2)
{
foodx=fox;
foody=foy;
range=forr;
range2=forr2;
damage=dmg;
speed=sp;
direction=dr;
foodtype=fot;
foodtype2=fot2;
if(weploopsound==1) foodsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foodtype+"/"+foodtype2+"/*loop*"),me.x,me.y,foodx,foody,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void food_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void foodloop()
{
for(uint i=0; i<foods.length(); i++)
{
if(foods[i].speedtimer.elapsed>=foods[i].speed)
{
foodpool.update_sound_2d(foods[i].foodsound,foods[i].foodx,foods[i].foody);
foods[i].speedtimer.restart();
if(foods[i].direction=="right")
{
foods[i].foodx++;
}
if(foods[i].direction=="left")
{
foods[i].foodx--;
}
if(foods[i].direction=="up")
{
foods[i].foody++;
}
if(foods[i].direction=="down")
{
foods[i].foody--;
}
if(string_contains(gmt(foods[i].foodx,foods[i].foody),"wall",1)>-1)
{
foodpool.destroy_sound(foods[i].foodsound);
if(weprecsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*rico*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
foods[i].food_bounce();
}
if(me.x==foods[i].foodx and me.y==foods[i].foody and shieldon==1 and invehicle==false)
{
foodpool.destroy_sound(foods[i].foodsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=foods[i].damage-shielddefence;
foods.remove_at(i);
return;
}
else if(me.x==foods[i].foodx and me.y==foods[i].foody and shieldon==0 and invehicle==false)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=foods[i].damage-defence;
hearttime-=foods[i].damage-defence;
foods.remove_at(i);
return;
}
if(absolute(foods[i].foodx-me.x)>foods[i].range or absolute(foods[i].foody-me.y)>foods[i].range2)
{
foodpool.destroy_sound(foods[i].foodsound);
foods.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==foods[i].foodx and animals[i1].amy==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==foods[i].foodx and calanders[i2].calandery==foods[i].foody and calanders[i2].destroyable==true)
{
foodpool.destroy_sound(foods[i].foodsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
foods.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==foods[i].foodx and clocks[i3].clocky==foods[i].foody and clocks[i3].destroyable==true)
{
foodpool.destroy_sound(foods[i].foodsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
foods.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==foods[i].foodx and doors[i4].starty==foods[i].foody and doors[i4].destroyable==true)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==foods[i].foodx and humans[i5].humy==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==foods[i].foodx and objs[i6].ity==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
foods.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==foods[i].foodx and projectiles[i7].proy==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==foods[i].foodx and robots[i8].roby==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==foods[i].foodx and signs[i9].signy==foods[i].foody and signs[i9].destroyable==true)
{
foodpool.destroy_sound(foods[i].foodsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
foods.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=foods[i].foodx and spikes[i10].maxx>=foods[i].foodx and spikes[i10].miny<=foods[i].foody and spikes[i10].maxy>=foods[i].foody and spikes[i10].destroyable==true)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==foods[i].foodx and turrets[i11].tury==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==foods[i].foodx and vehicles[i12].vehy==foods[i].foody and vehicles[i12].moveable==false)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=foods[i].foodx and dest_walls[i13].maxx>=foods[i].foodx and dest_walls[i13].miny<=foods[i].foody and dest_walls[i13].maxy>=foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==foods[i].foodx and zombies[i14].zomby==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==foods[i].foodx and psdoors[i15].starty==foods[i].foody and psdoors[i15].destroyable==true)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==foods[i].foodx and bosses[i16].bossy==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==foods[i].foodx and helpers[i17].helpy==foods[i].foody)
{
foodpool.destroy_sound(foods[i].foodsound);
if(wephitsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*hit*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) foods[i].wepsound=foodpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+foods[i].foodtype+"/"+foods[i].foodtype2+"/*shell*"),me.x,me.y,foods[i].foodx,foods[i].foody,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=foods[i].damage;
foods.remove_at(i);
return;
}
}
}
}
void spawn_food(int x,int y,int range,int range2,int damage,int speed,string direction,string foodtype,string foodtype2)
{
food bl1(x,y,range,range2,damage,speed,direction,foodtype,foodtype2);
foods.insert_last(bl1);
}
void destroy_all_foods()
{
for(uint i=0; i<foods.length(); i++)
{
foodpool.destroy_sound(foods[i].foodsound);
}
foods.resize(0);
}

fireball@[]fireballs(0);
class fireball
{
int fireballsound, wepsound;
int fireballx;
int firebally;
int range;
int range2;
int damage;
int speed;
string direction;
string fireballtype;
string fireballtype2;
timer speedtimer;
fireball(int firx,int firy,int fir,int fir2,int dmg,int sp,string dr,string firt,string firt2)
{
fireballx=firx;
firebally=firy;
range=fir;
range2=fir2;
damage=dmg;
speed=sp;
direction=dr;
fireballtype=firt;
fireballtype2=firt2;
if(weploopsound==1) fireballsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballtype+"/"+fireballtype2+"/*loop*"),me.x,me.y,fireballx,firebally,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void fireball_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void fireballloop()
{
for(uint i=0; i<fireballs.length(); i++)
{
if(fireballs[i].speedtimer.elapsed>=fireballs[i].speed)
{
firepool.update_sound_2d(fireballs[i].fireballsound,fireballs[i].fireballx,fireballs[i].firebally);
fireballs[i].speedtimer.restart();
if(fireballs[i].direction=="right")
{
fireballs[i].fireballx++;
}
if(fireballs[i].direction=="left")
{
fireballs[i].fireballx--;
}
if(fireballs[i].direction=="up")
{
fireballs[i].firebally++;
}
if(fireballs[i].direction=="down")
{
fireballs[i].firebally--;
}
if(string_contains(gmt(fireballs[i].fireballx,fireballs[i].firebally),"wall",1)>-1)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(weprecsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*rico*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
fireballs[i].fireball_bounce();
}
if(me.x==fireballs[i].fireballx and me.y==fireballs[i].firebally and shieldon==1 and invehicle==false)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=fireballs[i].damage-shielddefence;
fireballs.remove_at(i);
return;
}
else if(me.x==fireballs[i].fireballx and me.y==fireballs[i].firebally and shieldon==0 and invehicle==false)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=fireballs[i].damage-defence;
hearttime-=fireballs[i].damage-defence;
fireballs.remove_at(i);
return;
}
if(absolute(fireballs[i].fireballx-me.x)>fireballs[i].range or absolute(fireballs[i].firebally-me.y)>fireballs[i].range2)
{
firepool.destroy_sound(fireballs[i].fireballsound);
fireballs.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==fireballs[i].fireballx and animals[i1].amy==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==fireballs[i].fireballx and calanders[i2].calandery==fireballs[i].firebally and calanders[i2].destroyable==true)
{
firepool.destroy_sound(fireballs[i].fireballsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
fireballs.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==fireballs[i].fireballx and clocks[i3].clocky==fireballs[i].firebally and clocks[i3].destroyable==true)
{
firepool.destroy_sound(fireballs[i].fireballsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
fireballs.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==fireballs[i].fireballx and doors[i4].starty==fireballs[i].firebally and doors[i4].destroyable==true)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==fireballs[i].fireballx and humans[i5].humy==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==fireballs[i].fireballx and objs[i6].ity==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
fireballs.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==fireballs[i].fireballx and projectiles[i7].proy==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==fireballs[i].fireballx and robots[i8].roby==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==fireballs[i].fireballx and signs[i9].signy==fireballs[i].firebally and signs[i9].destroyable==true)
{
firepool.destroy_sound(fireballs[i].fireballsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
fireballs.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=fireballs[i].fireballx and spikes[i10].maxx>=fireballs[i].fireballx and spikes[i10].miny<=fireballs[i].firebally and spikes[i10].maxy>=fireballs[i].firebally and spikes[i10].destroyable==true)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==fireballs[i].fireballx and turrets[i11].tury==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==fireballs[i].fireballx and vehicles[i12].vehy==fireballs[i].firebally and vehicles[i12].moveable==false)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=fireballs[i].fireballx and dest_walls[i13].maxx>=fireballs[i].fireballx and dest_walls[i13].miny<=fireballs[i].firebally and dest_walls[i13].maxy>=fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==fireballs[i].fireballx and zombies[i14].zomby==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==fireballs[i].fireballx and psdoors[i15].starty==fireballs[i].firebally and psdoors[i15].destroyable==true)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==fireballs[i].fireballx and bosses[i16].bossy==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==fireballs[i].fireballx and helpers[i17].helpy==fireballs[i].firebally)
{
firepool.destroy_sound(fireballs[i].fireballsound);
if(wephitsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*hit*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) fireballs[i].wepsound=firepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+fireballs[i].fireballtype+"/"+fireballs[i].fireballtype2+"/*shell*"),me.x,me.y,fireballs[i].fireballx,fireballs[i].firebally,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=fireballs[i].damage;
fireballs.remove_at(i);
return;
}
}
}
}
void spawn_fireball(int x,int y,int range,int range2,int damage,int speed,string direction,string fireballtype,string fireballtype2)
{
fireball bl1(x,y,range,range2,damage,speed,direction,fireballtype,fireballtype2);
fireballs.insert_last(bl1);
}
void destroy_all_fireballs()
{
for(uint i=0; i<fireballs.length(); i++)
{
firepool.destroy_sound(fireballs[i].fireballsound);
}
fireballs.resize(0);
}

grenade@[]grenades(0);
class grenade
{
int grenadesound, wepsound;
int grenadex;
int grenadey;
int range;
int range2;
int damage;
int speed;
string direction;
string grenadetype;
string grenadetype2;
timer speedtimer;
grenade(int grex,int grey,int grer,int grer2,int dmg,int sp,string dr,string gret,string gret2)
{
grenadex=grex;
grenadey=grey;
range=grer;
range2=grer2;
damage=dmg;
speed=sp;
direction=dr;
grenadetype=gret;
grenadetype2=gret2;
if(weploopsound==1) grenadesound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenadetype+"/"+grenadetype2+"/*loop*"),me.x,me.y,grenadex,grenadey,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void grenade_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void grenadeloop()
{
for(uint i=0; i<grenades.length(); i++)
{
if(grenades[i].speedtimer.elapsed>=grenades[i].speed)
{
grenadepool.update_sound_2d(grenades[i].grenadesound,grenades[i].grenadex,grenades[i].grenadey);
grenades[i].speedtimer.restart();
if(grenades[i].direction=="right")
{
grenades[i].grenadex++;
}
if(grenades[i].direction=="left")
{
grenades[i].grenadex--;
}
if(grenades[i].direction=="up")
{
grenades[i].grenadey++;
}
if(grenades[i].direction=="down")
{
grenades[i].grenadey--;
}
if(string_contains(gmt(grenades[i].grenadex,grenades[i].grenadey),"wall",1)>-1)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(weprecsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*rico*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
grenades[i].grenade_bounce();
}
if(me.x==grenades[i].grenadex and me.y==grenades[i].grenadey and shieldon==1 and invehicle==false)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=grenades[i].damage-shielddefence;
grenades.remove_at(i);
return;
}
else if(me.x==grenades[i].grenadex and me.y==grenades[i].grenadey and shieldon==0 and invehicle==false)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=grenades[i].damage-defence;
hearttime-=grenades[i].damage-defence;
grenades.remove_at(i);
return;
}
if(absolute(grenades[i].grenadex-me.x)>grenades[i].range or absolute(grenades[i].grenadey-me.y)>grenades[i].range2)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
grenades.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==grenades[i].grenadex and animals[i1].amy==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==grenades[i].grenadex and calanders[i2].calandery==grenades[i].grenadey and calanders[i2].destroyable==true)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
grenades.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==grenades[i].grenadex and clocks[i3].clocky==grenades[i].grenadey and clocks[i3].destroyable==true)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
grenades.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==grenades[i].grenadex and doors[i4].starty==grenades[i].grenadey and doors[i4].destroyable==true)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==grenades[i].grenadex and humans[i5].humy==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==grenades[i].grenadex and objs[i6].ity==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
grenades.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==grenades[i].grenadex and projectiles[i7].proy==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==grenades[i].grenadex and robots[i8].roby==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==grenades[i].grenadex and signs[i9].signy==grenades[i].grenadey and signs[i9].destroyable==true)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
grenades.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=grenades[i].grenadex and spikes[i10].maxx>=grenades[i].grenadex and spikes[i10].miny<=grenades[i].grenadey and spikes[i10].maxy>=grenades[i].grenadey and spikes[i10].destroyable==true)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==grenades[i].grenadex and turrets[i11].tury==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==grenades[i].grenadex and vehicles[i12].vehy==grenades[i].grenadey and vehicles[i12].moveable==false)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=grenades[i].grenadex and dest_walls[i13].maxx>=grenades[i].grenadex and dest_walls[i13].miny<=grenades[i].grenadey and dest_walls[i13].maxy>=grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==grenades[i].grenadex and zombies[i14].zomby==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==grenades[i].grenadex and psdoors[i15].starty==grenades[i].grenadey and psdoors[i15].destroyable==true)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==grenades[i].grenadex and bosses[i16].bossy==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==grenades[i].grenadex and helpers[i17].helpy==grenades[i].grenadey)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
if(wephitsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*hit*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) grenades[i].wepsound=grenadepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+grenades[i].grenadetype+"/"+grenades[i].grenadetype2+"/*shell*"),me.x,me.y,grenades[i].grenadex,grenades[i].grenadey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=grenades[i].damage;
grenades.remove_at(i);
return;
}
}
}
}
void spawn_grenade(int x,int y,int range,int range2,int damage,int speed,string direction,string grenadetype,string grenadetype2)
{
grenade bl1(x,y,range,range2,damage,speed,direction,grenadetype,grenadetype2);
grenades.insert_last(bl1);
}
void destroy_all_grenades()
{
for(uint i=0; i<grenades.length(); i++)
{
grenadepool.destroy_sound(grenades[i].grenadesound);
}
grenades.resize(0);
}

knife@[]knifes(0);
class knife
{
int knifesound, wepsound;
int knifex;
int knifey;
int range;
int range2;
int damage;
int speed;
string direction;
string knifetype;
string knifetype2;
timer speedtimer;
knife(int kx,int ky,int kr,int kr2,int dmg,int sp,string dr,string kt,string kt2)
{
knifex=kx;
knifey=ky;
range=kr;
range2=kr2;
damage=dmg;
speed=sp;
direction=dr;
knifetype=kt;
knifetype2=kt2;
if(weploopsound==1) knifesound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifetype+"/"+knifetype2+"/*loop*"),me.x,me.y,knifex,knifey,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void knife_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void knifeloop()
{
for(uint i=0; i<knifes.length(); i++)
{
if(knifes[i].speedtimer.elapsed>=knifes[i].speed)
{
knifepool.update_sound_2d(knifes[i].knifesound,knifes[i].knifex,knifes[i].knifey);
knifes[i].speedtimer.restart();
if(knifes[i].direction=="right")
{
knifes[i].knifex++;
}
if(knifes[i].direction=="left")
{
knifes[i].knifex--;
}
if(knifes[i].direction=="up")
{
knifes[i].knifey++;
}
if(knifes[i].direction=="down")
{
knifes[i].knifey--;
}
if(string_contains(gmt(knifes[i].knifex,knifes[i].knifey),"wall",1)>-1)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(weprecsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*rico*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
knifes[i].knife_bounce();
}
if(me.x==knifes[i].knifex and me.y==knifes[i].knifey and shieldon==1 and invehicle==false)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=knifes[i].damage-shielddefence;
knifes.remove_at(i);
return;
}
else if(me.x==knifes[i].knifex and me.y==knifes[i].knifey and shieldon==0 and invehicle==false)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=knifes[i].damage-defence;
hearttime-=knifes[i].damage-defence;
knifes.remove_at(i);
return;
}
if(absolute(knifes[i].knifex-me.x)>knifes[i].range or absolute(knifes[i].knifey-me.y)>knifes[i].range2)
{
knifepool.destroy_sound(knifes[i].knifesound);
knifes.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==knifes[i].knifex and animals[i1].amy==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==knifes[i].knifex and calanders[i2].calandery==knifes[i].knifey and calanders[i2].destroyable==true)
{
knifepool.destroy_sound(knifes[i].knifesound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
knifes.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==knifes[i].knifex and clocks[i3].clocky==knifes[i].knifey and clocks[i3].destroyable==true)
{
knifepool.destroy_sound(knifes[i].knifesound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
knifes.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==knifes[i].knifex and doors[i4].starty==knifes[i].knifey and doors[i4].destroyable==true)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==knifes[i].knifex and humans[i5].humy==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==knifes[i].knifex and objs[i6].ity==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
knifes.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==knifes[i].knifex and projectiles[i7].proy==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==knifes[i].knifex and robots[i8].roby==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==knifes[i].knifex and signs[i9].signy==knifes[i].knifey and signs[i9].destroyable==true)
{
knifepool.destroy_sound(knifes[i].knifesound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
knifes.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=knifes[i].knifex and spikes[i10].maxx>=knifes[i].knifex and spikes[i10].miny<=knifes[i].knifey and spikes[i10].maxy>=knifes[i].knifey and spikes[i10].destroyable==true)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==knifes[i].knifex and turrets[i11].tury==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==knifes[i].knifex and vehicles[i12].vehy==knifes[i].knifey and vehicles[i12].moveable==false)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=knifes[i].knifex and dest_walls[i13].maxx>=knifes[i].knifex and dest_walls[i13].miny<=knifes[i].knifey and dest_walls[i13].maxy>=knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==knifes[i].knifex and zombies[i14].zomby==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==knifes[i].knifex and psdoors[i15].starty==knifes[i].knifey and psdoors[i15].destroyable==true)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==knifes[i].knifex and bosses[i16].bossy==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==knifes[i].knifex and helpers[i17].helpy==knifes[i].knifey)
{
knifepool.destroy_sound(knifes[i].knifesound);
if(wephitsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*hit*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) knifes[i].wepsound=knifepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+knifes[i].knifetype+"/"+knifes[i].knifetype2+"/*shell*"),me.x,me.y,knifes[i].knifex,knifes[i].knifey,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=knifes[i].damage;
knifes.remove_at(i);
return;
}
}
}
}
void spawn_knife(int x,int y,int range,int range2,int damage,int speed,string direction,string knifetype,string knifetype2)
{
knife bl1(x,y,range,range2,damage,speed,direction,knifetype,knifetype2);
knifes.insert_last(bl1);
}
void destroy_all_knifes()
{
for(uint i=0; i<knifes.length(); i++)
{
knifepool.destroy_sound(knifes[i].knifesound);
}
knifes.resize(0);
}

laser@[]lasers(0);
class laser
{
int lasersound, wepsound;
int laserx;
int lasery;
int range;
int range2;
int damage;
int speed;
string direction;
string lasertype;
string lasertype2;
timer speedtimer;
laser(int lrx,int lry,int lrr,int lrr2,int dmg,int sp,string dr,string lrt,string lrt2)
{
laserx=lrx;
lasery=lry;
range=lrr;
range2=lrr2;
damage=dmg;
speed=sp;
direction=dr;
lasertype=lrt;
lasertype2=lrt2;
if(weploopsound==1) lasersound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasertype+"/"+lasertype2+"/*loop*"),me.x,me.y,laserx,lasery,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void laser_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void laserloop()
{
for(uint i=0; i<lasers.length(); i++)
{
if(lasers[i].speedtimer.elapsed>=lasers[i].speed)
{
laserpool.update_sound_2d(lasers[i].lasersound,lasers[i].laserx,lasers[i].lasery);
lasers[i].speedtimer.restart();
if(lasers[i].direction=="right")
{
lasers[i].laserx++;
}
if(lasers[i].direction=="left")
{
lasers[i].laserx--;
}
if(lasers[i].direction=="up")
{
lasers[i].lasery++;
}
if(lasers[i].direction=="down")
{
lasers[i].lasery--;
}
if(string_contains(gmt(lasers[i].laserx,lasers[i].lasery),"wall",1)>-1)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(weprecsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*rico*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
lasers[i].laser_bounce();
}
if(me.x==lasers[i].laserx and me.y==lasers[i].lasery and shieldon==1 and invehicle==false)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=lasers[i].damage-shielddefence;
lasers.remove_at(i);
return;
}
else if(me.x==lasers[i].laserx and me.y==lasers[i].lasery and shieldon==0 and invehicle==false)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=lasers[i].damage-defence;
hearttime-=lasers[i].damage-defence;
lasers.remove_at(i);
return;
}
if(absolute(lasers[i].laserx-me.x)>lasers[i].range or absolute(lasers[i].lasery-me.y)>lasers[i].range2)
{
laserpool.destroy_sound(lasers[i].lasersound);
lasers.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==lasers[i].laserx and animals[i1].amy==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==lasers[i].laserx and calanders[i2].calandery==lasers[i].lasery and calanders[i2].destroyable==true)
{
laserpool.destroy_sound(lasers[i].lasersound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
lasers.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==lasers[i].laserx and clocks[i3].clocky==lasers[i].lasery and clocks[i3].destroyable==true)
{
laserpool.destroy_sound(lasers[i].lasersound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
lasers.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==lasers[i].laserx and doors[i4].starty==lasers[i].lasery and doors[i4].destroyable==true)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==lasers[i].laserx and humans[i5].humy==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==lasers[i].laserx and objs[i6].ity==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
lasers.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==lasers[i].laserx and projectiles[i7].proy==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==lasers[i].laserx and robots[i8].roby==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==lasers[i].laserx and signs[i9].signy==lasers[i].lasery and signs[i9].destroyable==true)
{
laserpool.destroy_sound(lasers[i].lasersound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
lasers.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=lasers[i].laserx and spikes[i10].maxx>=lasers[i].laserx and spikes[i10].miny<=lasers[i].lasery and spikes[i10].maxy>=lasers[i].lasery and spikes[i10].destroyable==true)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==lasers[i].laserx and turrets[i11].tury==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==lasers[i].laserx and vehicles[i12].vehy==lasers[i].lasery and vehicles[i12].moveable==false)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=lasers[i].laserx and dest_walls[i13].maxx>=lasers[i].laserx and dest_walls[i13].miny<=lasers[i].lasery and dest_walls[i13].maxy>=lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==lasers[i].laserx and zombies[i14].zomby==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==lasers[i].laserx and psdoors[i15].starty==lasers[i].lasery and psdoors[i15].destroyable==true)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==lasers[i].laserx and bosses[i16].bossy==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==lasers[i].laserx and helpers[i17].helpy==lasers[i].lasery)
{
laserpool.destroy_sound(lasers[i].lasersound);
if(wephitsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*hit*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) lasers[i].wepsound=laserpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+lasers[i].lasertype+"/"+lasers[i].lasertype2+"/*shell*"),me.x,me.y,lasers[i].laserx,lasers[i].lasery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=lasers[i].damage;
lasers.remove_at(i);
return;
}
}
}
}
void spawn_laser(int x,int y,int range,int range2,int damage,int speed,string direction,string lasertype,string lasertype2)
{
laser bl1(x,y,range,range2,damage,speed,direction,lasertype,lasertype2);
lasers.insert_last(bl1);
}
void destroy_all_lasers()
{
for(uint i=0; i<lasers.length(); i++)
{
laserpool.destroy_sound(lasers[i].lasersound);
}
lasers.resize(0);
}

neadle@[]neadles(0);
class neadle
{
int neadlesound, wepsound;
int neadlex;
int neadley;
int range;
int range2;
int damage;
int speed;
string direction;
string neadletype;
string neadletype2;
timer speedtimer;
neadle(int ndx,int ndy,int ndr,int ndr2,int dmg,int sp,string dr,string ndt,string ndt2)
{
neadlex=ndx;
neadley=ndy;
range=ndr;
range2=ndr2;
damage=dmg;
speed=sp;
direction=dr;
neadletype=ndt;
neadletype2=ndt2;
if(weploopsound==1) neadlesound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadletype+"/"+neadletype2+"/*loop*"),me.x,me.y,neadlex,neadley,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void neadle_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void neadleloop()
{
for(uint i=0; i<neadles.length(); i++)
{
if(neadles[i].speedtimer.elapsed>=neadles[i].speed)
{
neadlepool.update_sound_2d(neadles[i].neadlesound,neadles[i].neadlex,neadles[i].neadley);
neadles[i].speedtimer.restart();
if(neadles[i].direction=="right")
{
neadles[i].neadlex++;
}
if(neadles[i].direction=="left")
{
neadles[i].neadlex--;
}
if(neadles[i].direction=="up")
{
neadles[i].neadley++;
}
if(neadles[i].direction=="down")
{
neadles[i].neadley--;
}
if(string_contains(gmt(neadles[i].neadlex,neadles[i].neadley),"wall",1)>-1)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(weprecsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*rico*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
neadles[i].neadle_bounce();
}
if(me.x==neadles[i].neadlex and me.y==neadles[i].neadley and shieldon==1 and invehicle==false)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=neadles[i].damage-shielddefence;
neadles.remove_at(i);
return;
}
else if(me.x==neadles[i].neadlex and me.y==neadles[i].neadley and shieldon==0 and invehicle==false)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=neadles[i].damage-defence;
hearttime-=neadles[i].damage-defence;
neadles.remove_at(i);
return;
}
if(absolute(neadles[i].neadlex-me.x)>neadles[i].range or absolute(neadles[i].neadley-me.y)>neadles[i].range2)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
neadles.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==neadles[i].neadlex and animals[i1].amy==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==neadles[i].neadlex and calanders[i2].calandery==neadles[i].neadley and calanders[i2].destroyable==true)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
neadles.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==neadles[i].neadlex and clocks[i3].clocky==neadles[i].neadley and clocks[i3].destroyable==true)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
neadles.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==neadles[i].neadlex and doors[i4].starty==neadles[i].neadley and doors[i4].destroyable==true)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==neadles[i].neadlex and humans[i5].humy==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==neadles[i].neadlex and objs[i6].ity==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
neadles.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==neadles[i].neadlex and projectiles[i7].proy==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==neadles[i].neadlex and robots[i8].roby==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==neadles[i].neadlex and signs[i9].signy==neadles[i].neadley and signs[i9].destroyable==true)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
neadles.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=neadles[i].neadlex and spikes[i10].maxx>=neadles[i].neadlex and spikes[i10].miny<=neadles[i].neadley and spikes[i10].maxy>=neadles[i].neadley and spikes[i10].destroyable==true)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==neadles[i].neadlex and turrets[i11].tury==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==neadles[i].neadlex and vehicles[i12].vehy==neadles[i].neadley and vehicles[i12].moveable==false)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=neadles[i].neadlex and dest_walls[i13].maxx>=neadles[i].neadlex and dest_walls[i13].miny<=neadles[i].neadley and dest_walls[i13].maxy>=neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==neadles[i].neadlex and zombies[i14].zomby==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==neadles[i].neadlex and psdoors[i15].starty==neadles[i].neadley and psdoors[i15].destroyable==true)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==neadles[i].neadlex and bosses[i16].bossy==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==neadles[i].neadlex and helpers[i17].helpy==neadles[i].neadley)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
if(wephitsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*hit*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) neadles[i].wepsound=neadlepool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+neadles[i].neadletype+"/"+neadles[i].neadletype2+"/*shell*"),me.x,me.y,neadles[i].neadlex,neadles[i].neadley,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=neadles[i].damage;
neadles.remove_at(i);
return;
}
}
}
}
void spawn_neadle(int x,int y,int range,int range2,int damage,int speed,string direction,string neadletype,string neadletype2)
{
neadle bl1(x,y,range,range2,damage,speed,direction,neadletype,neadletype2);
neadles.insert_last(bl1);
}
void destroy_all_neadles()
{
for(uint i=0; i<neadles.length(); i++)
{
neadlepool.destroy_sound(neadles[i].neadlesound);
}
neadles.resize(0);
}

pusher@[]pushers(0);
class pusher
{
int pushersound, wepsound;
int pusherx;
int pushery;
int range;
int range2;
int damage;
int speed;
string direction;
string pushertype;
string pushertype2;
timer speedtimer;
pusher(int phx,int phy,int phr,int phr2,int dmg,int sp,string dr,string pht,string pht2)
{
pusherx=phx;
pushery=phy;
range=phr;
range2=phr2;
damage=dmg;
speed=sp;
direction=dr;
pushertype=pht;
pushertype2=pht2;
if(weploopsound==1) pushersound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushertype+"/"+pushertype2+"/*loop*"),me.x,me.y,pusherx,pushery,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void pusher_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void pusherloop()
{
for(uint i=0; i<pushers.length(); i++)
{
if(pushers[i].speedtimer.elapsed>=pushers[i].speed)
{
pushpool.update_sound_2d(pushers[i].pushersound,pushers[i].pusherx,pushers[i].pushery);
pushers[i].speedtimer.restart();
if(pushers[i].direction=="right")
{
pushers[i].pusherx++;
}
if(pushers[i].direction=="left")
{
pushers[i].pusherx--;
}
if(pushers[i].direction=="up")
{
pushers[i].pushery++;
}
if(pushers[i].direction=="down")
{
pushers[i].pushery--;
}
if(string_contains(gmt(pushers[i].pusherx,pushers[i].pushery),"wall",1)>-1)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(weprecsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*rico*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
pushers[i].pusher_bounce();
}
if(me.x==pushers[i].pusherx and me.y==pushers[i].pushery and shieldon==1 and invehicle==false)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=pushers[i].damage-shielddefence;
pushers.remove_at(i);
return;
}
else if(me.x==pushers[i].pusherx and me.y==pushers[i].pushery and shieldon==0 and invehicle==false)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=pushers[i].damage-defence;
hearttime-=pushers[i].damage-defence;
pushers.remove_at(i);
return;
}
if(absolute(pushers[i].pusherx-me.x)>pushers[i].range or absolute(pushers[i].pushery-me.y)>pushers[i].range2)
{
pushpool.destroy_sound(pushers[i].pushersound);
pushers.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==pushers[i].pusherx and animals[i1].amy==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==pushers[i].pusherx and calanders[i2].calandery==pushers[i].pushery and calanders[i2].destroyable==true)
{
pushpool.destroy_sound(pushers[i].pushersound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
pushers.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==pushers[i].pusherx and clocks[i3].clocky==pushers[i].pushery and clocks[i3].destroyable==true)
{
pushpool.destroy_sound(pushers[i].pushersound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
pushers.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==pushers[i].pusherx and doors[i4].starty==pushers[i].pushery and doors[i4].destroyable==true)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==pushers[i].pusherx and humans[i5].humy==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==pushers[i].pusherx and objs[i6].ity==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
pushers.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==pushers[i].pusherx and projectiles[i7].proy==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==pushers[i].pusherx and robots[i8].roby==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==pushers[i].pusherx and signs[i9].signy==pushers[i].pushery and signs[i9].destroyable==true)
{
pushpool.destroy_sound(pushers[i].pushersound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
pushers.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=pushers[i].pusherx and spikes[i10].maxx>=pushers[i].pusherx and spikes[i10].miny<=pushers[i].pushery and spikes[i10].maxy>=pushers[i].pushery and spikes[i10].destroyable==true)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==pushers[i].pusherx and turrets[i11].tury==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==pushers[i].pusherx and vehicles[i12].vehy==pushers[i].pushery and vehicles[i12].moveable==false)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=pushers[i].pusherx and dest_walls[i13].maxx>=pushers[i].pusherx and dest_walls[i13].miny<=pushers[i].pushery and dest_walls[i13].maxy>=pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==pushers[i].pusherx and zombies[i14].zomby==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==pushers[i].pusherx and psdoors[i15].starty==pushers[i].pushery and psdoors[i15].destroyable==true)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==pushers[i].pusherx and bosses[i16].bossy==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==pushers[i].pusherx and helpers[i17].helpy==pushers[i].pushery)
{
pushpool.destroy_sound(pushers[i].pushersound);
if(wephitsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*hit*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) pushers[i].wepsound=pushpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+pushers[i].pushertype+"/"+pushers[i].pushertype2+"/*shell*"),me.x,me.y,pushers[i].pusherx,pushers[i].pushery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=pushers[i].damage;
pushers.remove_at(i);
return;
}
}
}
}
void spawn_pusher(int x,int y,int range,int range2,int damage,int speed,string direction,string pushertype,string pushertype2)
{
pusher bl1(x,y,range,range2,damage,speed,direction,pushertype,pushertype2);
pushers.insert_last(bl1);
}
void destroy_all_pushers()
{
for(uint i=0; i<pushers.length(); i++)
{
pushpool.destroy_sound(pushers[i].pushersound);
}
pushers.resize(0);
}

rock@[]rocks(0);
class rock
{
int rocksound, wepsound;
int rockx;
int rocky;
int range;
int range2;
int damage;
int speed;
string direction;
string rocktype;
string rocktype2;
timer speedtimer;
rock(int rkx,int rky,int rkr,int rkr2,int dmg,int sp,string dr,string rkt,string rkt2)
{
rockx=rkx;
rocky=rky;
range=rkr;
range2=rkr2;
damage=dmg;
speed=sp;
direction=dr;
rocktype=rkt;
rocktype2=rkt2;
if(weploopsound==1) rocksound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocktype+"/"+rocktype2+"/*loop*"),me.x,me.y,rockx,rocky,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void rock_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void rockloop()
{
for(uint i=0; i<rocks.length(); i++)
{
if(rocks[i].speedtimer.elapsed>=rocks[i].speed)
{
rockpool.update_sound_2d(rocks[i].rocksound,rocks[i].rockx,rocks[i].rocky);
rocks[i].speedtimer.restart();
if(rocks[i].direction=="right")
{
rocks[i].rockx++;
}
if(rocks[i].direction=="left")
{
rocks[i].rockx--;
}
if(rocks[i].direction=="up")
{
rocks[i].rocky++;
}
if(rocks[i].direction=="down")
{
rocks[i].rocky--;
}
if(string_contains(gmt(rocks[i].rockx,rocks[i].rocky),"wall",1)>-1)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(weprecsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*rico*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
rocks[i].rock_bounce();
}
if(me.x==rocks[i].rockx and me.y==rocks[i].rocky and shieldon==1 and invehicle==false)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=rocks[i].damage-shielddefence;
rocks.remove_at(i);
return;
}
else if(me.x==rocks[i].rockx and me.y==rocks[i].rocky and shieldon==0 and invehicle==false)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=rocks[i].damage-defence;
hearttime-=rocks[i].damage-defence;
rocks.remove_at(i);
return;
}
if(absolute(rocks[i].rockx-me.x)>rocks[i].range or absolute(rocks[i].rocky-me.y)>rocks[i].range2)
{
rockpool.destroy_sound(rocks[i].rocksound);
rocks.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==rocks[i].rockx and animals[i1].amy==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==rocks[i].rockx and calanders[i2].calandery==rocks[i].rocky and calanders[i2].destroyable==true)
{
rockpool.destroy_sound(rocks[i].rocksound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rocks.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==rocks[i].rockx and clocks[i3].clocky==rocks[i].rocky and clocks[i3].destroyable==true)
{
rockpool.destroy_sound(rocks[i].rocksound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rocks.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==rocks[i].rockx and doors[i4].starty==rocks[i].rocky and doors[i4].destroyable==true)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==rocks[i].rockx and humans[i5].humy==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==rocks[i].rockx and objs[i6].ity==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rocks.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==rocks[i].rockx and projectiles[i7].proy==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==rocks[i].rockx and robots[i8].roby==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==rocks[i].rockx and signs[i9].signy==rocks[i].rocky and signs[i9].destroyable==true)
{
rockpool.destroy_sound(rocks[i].rocksound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rocks.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=rocks[i].rockx and spikes[i10].maxx>=rocks[i].rockx and spikes[i10].miny<=rocks[i].rocky and spikes[i10].maxy>=rocks[i].rocky and spikes[i10].destroyable==true)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==rocks[i].rockx and turrets[i11].tury==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==rocks[i].rockx and vehicles[i12].vehy==rocks[i].rocky and vehicles[i12].moveable==false)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=rocks[i].rockx and dest_walls[i13].maxx>=rocks[i].rockx and dest_walls[i13].miny<=rocks[i].rocky and dest_walls[i13].maxy>=rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==rocks[i].rockx and zombies[i14].zomby==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==rocks[i].rockx and psdoors[i15].starty==rocks[i].rocky and psdoors[i15].destroyable==true)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==rocks[i].rockx and bosses[i16].bossy==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==rocks[i].rockx and helpers[i17].helpy==rocks[i].rocky)
{
rockpool.destroy_sound(rocks[i].rocksound);
if(wephitsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*hit*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rocks[i].wepsound=rockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rocks[i].rocktype+"/"+rocks[i].rocktype2+"/*shell*"),me.x,me.y,rocks[i].rockx,rocks[i].rocky,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=rocks[i].damage;
rocks.remove_at(i);
return;
}
}
}
}
void spawn_rock(int x,int y,int range,int range2,int damage,int speed,string direction,string rocktype,string rocktype2)
{
rock bl1(x,y,range,range2,damage,speed,direction,rocktype,rocktype2);
rocks.insert_last(bl1);
}
void destroy_all_rocks()
{
for(uint i=0; i<rocks.length(); i++)
{
rockpool.destroy_sound(rocks[i].rocksound);
}
rocks.resize(0);
}

rocket@[]rockets(0);
class rocket
{
int rocketsound, wepsound;
int rocketx;
int rockety;
int range;
int range2;
int damage;
int speed;
string direction;
string rockettype;
string rockettype2;
timer speedtimer;
rocket(int rktx,int rkty,int rktr,int rktr2,int dmg,int sp,string dr,string rktt,string rktt2)
{
rocketx=rktx;
rockety=rkty;
range=rktr;
range2=rktr2;
damage=dmg;
speed=sp;
direction=dr;
rockettype=rktt;
rockettype2=rktt2;
if(weploopsound==1) rocketsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockettype+"/"+rockettype2+"/*loop*"),me.x,me.y,rocketx,rockety,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void rocket_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void rocketloop()
{
for(uint i=0; i<rockets.length(); i++)
{
if(rockets[i].speedtimer.elapsed>=rockets[i].speed)
{
rocketpool.update_sound_2d(rockets[i].rocketsound,rockets[i].rocketx,rockets[i].rockety);
rockets[i].speedtimer.restart();
if(rockets[i].direction=="right")
{
rockets[i].rocketx++;
}
if(rockets[i].direction=="left")
{
rockets[i].rocketx--;
}
if(rockets[i].direction=="up")
{
rockets[i].rockety++;
}
if(rockets[i].direction=="down")
{
rockets[i].rockety--;
}
if(string_contains(gmt(rockets[i].rocketx,rockets[i].rockety),"wall",1)>-1)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(weprecsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*rico*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
rockets[i].rocket_bounce();
}
if(me.x==rockets[i].rocketx and me.y==rockets[i].rockety and shieldon==1 and invehicle==false)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=rockets[i].damage-shielddefence;
rockets.remove_at(i);
return;
}
else if(me.x==rockets[i].rocketx and me.y==rockets[i].rockety and shieldon==0 and invehicle==false)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=rockets[i].damage-defence;
hearttime-=rockets[i].damage-defence;
rockets.remove_at(i);
return;
}
if(absolute(rockets[i].rocketx-me.x)>rockets[i].range or absolute(rockets[i].rockety-me.y)>rockets[i].range2)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
rockets.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==rockets[i].rocketx and animals[i1].amy==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==rockets[i].rocketx and calanders[i2].calandery==rockets[i].rockety and calanders[i2].destroyable==true)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rockets.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==rockets[i].rocketx and clocks[i3].clocky==rockets[i].rockety and clocks[i3].destroyable==true)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rockets.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==rockets[i].rocketx and doors[i4].starty==rockets[i].rockety and doors[i4].destroyable==true)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==rockets[i].rocketx and humans[i5].humy==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==rockets[i].rocketx and objs[i6].ity==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rockets.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==rockets[i].rocketx and projectiles[i7].proy==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==rockets[i].rocketx and robots[i8].roby==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==rockets[i].rocketx and signs[i9].signy==rockets[i].rockety and signs[i9].destroyable==true)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rockets.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=rockets[i].rocketx and spikes[i10].maxx>=rockets[i].rocketx and spikes[i10].miny<=rockets[i].rockety and spikes[i10].maxy>=rockets[i].rockety and spikes[i10].destroyable==true)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==rockets[i].rocketx and turrets[i11].tury==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==rockets[i].rocketx and vehicles[i12].vehy==rockets[i].rockety and vehicles[i12].moveable==false)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=rockets[i].rocketx and dest_walls[i13].maxx>=rockets[i].rocketx and dest_walls[i13].miny<=rockets[i].rockety and dest_walls[i13].maxy>=rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==rockets[i].rocketx and zombies[i14].zomby==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==rockets[i].rocketx and psdoors[i15].starty==rockets[i].rockety and psdoors[i15].destroyable==true)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==rockets[i].rocketx and bosses[i16].bossy==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==rockets[i].rocketx and helpers[i17].helpy==rockets[i].rockety)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
if(wephitsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*hit*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rockets[i].wepsound=rocketpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rockets[i].rockettype+"/"+rockets[i].rockettype2+"/*shell*"),me.x,me.y,rockets[i].rocketx,rockets[i].rockety,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=rockets[i].damage;
rockets.remove_at(i);
return;
}
}
}
}
void spawn_rocket(int x,int y,int range,int range2,int damage,int speed,string direction,string rockettype,string rockettype2)
{
rocket bl1(x,y,range,range2,damage,speed,direction,rockettype,rockettype2);
rockets.insert_last(bl1);
}
void destroy_all_rockets()
{
for(uint i=0; i<rockets.length(); i++)
{
rocketpool.destroy_sound(rockets[i].rocketsound);
}
rockets.resize(0);
}

rpg@[]rpgs(0);
class rpg
{
int rpgsound, wepsound;
int rpgx;
int rpgy;
int range;
int range2;
int damage;
int speed;
string direction;
string rpgtype;
string rpgtype2;
timer speedtimer;
rpg(int rpx,int rpy,int rpr,int rpr2,int dmg,int sp,string dr,string rpt,string rpt2)
{
rpgx=rpx;
rpgy=rpy;
range=rpr;
range2=rpr2;
damage=dmg;
speed=sp;
direction=dr;
rpgtype=rpt;
rpgtype2=rpt2;
if(weploopsound==1) rpgsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgtype+"/"+rpgtype2+"/*loop*"),me.x,me.y,rpgx,rpgy,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void rpg_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void rpgloop()
{
for(uint i=0; i<rpgs.length(); i++)
{
if(rpgs[i].speedtimer.elapsed>=rpgs[i].speed)
{
rpgpool.update_sound_2d(rpgs[i].rpgsound,rpgs[i].rpgx,rpgs[i].rpgy);
rpgs[i].speedtimer.restart();
if(rpgs[i].direction=="right")
{
rpgs[i].rpgx++;
}
if(rpgs[i].direction=="left")
{
rpgs[i].rpgx--;
}
if(rpgs[i].direction=="up")
{
rpgs[i].rpgy++;
}
if(rpgs[i].direction=="down")
{
rpgs[i].rpgy--;
}
if(string_contains(gmt(rpgs[i].rpgx,rpgs[i].rpgy),"wall",1)>-1)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(weprecsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*rico*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
rpgs[i].rpg_bounce();
}
if(me.x==rpgs[i].rpgx and me.y==rpgs[i].rpgy and shieldon==1 and invehicle==false)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=rpgs[i].damage-shielddefence;
rpgs.remove_at(i);
return;
}
else if(me.x==rpgs[i].rpgx and me.y==rpgs[i].rpgy and shieldon==0 and invehicle==false)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=rpgs[i].damage-defence;
hearttime-=rpgs[i].damage-defence;
rpgs.remove_at(i);
return;
}
if(absolute(rpgs[i].rpgx-me.x)>rpgs[i].range or absolute(rpgs[i].rpgy-me.y)>rpgs[i].range2)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
rpgs.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==rpgs[i].rpgx and animals[i1].amy==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==rpgs[i].rpgx and calanders[i2].calandery==rpgs[i].rpgy and calanders[i2].destroyable==true)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rpgs.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==rpgs[i].rpgx and clocks[i3].clocky==rpgs[i].rpgy and clocks[i3].destroyable==true)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rpgs.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==rpgs[i].rpgx and doors[i4].starty==rpgs[i].rpgy and doors[i4].destroyable==true)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==rpgs[i].rpgx and humans[i5].humy==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==rpgs[i].rpgx and objs[i6].ity==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rpgs.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==rpgs[i].rpgx and projectiles[i7].proy==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==rpgs[i].rpgx and robots[i8].roby==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==rpgs[i].rpgx and signs[i9].signy==rpgs[i].rpgy and signs[i9].destroyable==true)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
rpgs.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=rpgs[i].rpgx and spikes[i10].maxx>=rpgs[i].rpgx and spikes[i10].miny<=rpgs[i].rpgy and spikes[i10].maxy>=rpgs[i].rpgy and spikes[i10].destroyable==true)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==rpgs[i].rpgx and turrets[i11].tury==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==rpgs[i].rpgx and vehicles[i12].vehy==rpgs[i].rpgy and vehicles[i12].moveable==false)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=rpgs[i].rpgx and dest_walls[i13].maxx>=rpgs[i].rpgx and dest_walls[i13].miny<=rpgs[i].rpgy and dest_walls[i13].maxy>=rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==rpgs[i].rpgx and zombies[i14].zomby==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==rpgs[i].rpgx and psdoors[i15].starty==rpgs[i].rpgy and psdoors[i15].destroyable==true)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==rpgs[i].rpgx and bosses[i16].bossy==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==rpgs[i].rpgx and helpers[i17].helpy==rpgs[i].rpgy)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
if(wephitsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*hit*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) rpgs[i].wepsound=rpgpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+rpgs[i].rpgtype+"/"+rpgs[i].rpgtype2+"/*shell*"),me.x,me.y,rpgs[i].rpgx,rpgs[i].rpgy,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=rpgs[i].damage;
rpgs.remove_at(i);
return;
}
}
}
}
void spawn_rpg(int x,int y,int range,int range2,int damage,int speed,string direction,string rpgtype,string rpgtype2)
{
rpg bl1(x,y,range,range2,damage,speed,direction,rpgtype,rpgtype2);
rpgs.insert_last(bl1);
}
void destroy_all_rpgs()
{
for(uint i=0; i<rpgs.length(); i++)
{
rpgpool.destroy_sound(rpgs[i].rpgsound);
}
rpgs.resize(0);
}

star@[]stars(0);
class star
{
int starsound, wepsound;
int starx;
int stary;
int range;
int range2;
int damage;
int speed;
string direction;
string startype;
string startype2;
timer speedtimer;
star(int srx,int sry,int srr,int srr2,int dmg,int sp,string dr,string srt,string srt2)
{
starx=srx;
stary=sry;
range=srr;
range2=srr2;
damage=dmg;
speed=sp;
direction=dr;
startype=srt;
startype2=srt2;
if(weploopsound==1) starsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+startype+"/"+startype2+"/*loop*"),me.x,me.y,starx,stary,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void star_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void starloop()
{
for(uint i=0; i<stars.length(); i++)
{
if(stars[i].speedtimer.elapsed>=stars[i].speed)
{
starpool.update_sound_2d(stars[i].starsound,stars[i].starx,stars[i].stary);
stars[i].speedtimer.restart();
if(stars[i].direction=="right")
{
stars[i].starx++;
}
if(stars[i].direction=="left")
{
stars[i].starx--;
}
if(stars[i].direction=="up")
{
stars[i].stary++;
}
if(stars[i].direction=="down")
{
stars[i].stary--;
}
if(string_contains(gmt(stars[i].starx,stars[i].stary),"wall",1)>-1)
{
starpool.destroy_sound(stars[i].starsound);
if(weprecsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*rico*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
stars[i].star_bounce();
}
if(me.x==stars[i].starx and me.y==stars[i].stary and shieldon==1 and invehicle==false)
{
starpool.destroy_sound(stars[i].starsound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=stars[i].damage-shielddefence;
stars.remove_at(i);
return;
}
else if(me.x==stars[i].starx and me.y==stars[i].stary and shieldon==0 and invehicle==false)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=stars[i].damage-defence;
hearttime-=stars[i].damage-defence;
stars.remove_at(i);
return;
}
if(absolute(stars[i].starx-me.x)>stars[i].range or absolute(stars[i].stary-me.y)>stars[i].range2)
{
starpool.destroy_sound(stars[i].starsound);
stars.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==stars[i].starx and animals[i1].amy==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==stars[i].starx and calanders[i2].calandery==stars[i].stary and calanders[i2].destroyable==true)
{
starpool.destroy_sound(stars[i].starsound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
stars.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==stars[i].starx and clocks[i3].clocky==stars[i].stary and clocks[i3].destroyable==true)
{
starpool.destroy_sound(stars[i].starsound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
stars.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==stars[i].starx and doors[i4].starty==stars[i].stary and doors[i4].destroyable==true)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==stars[i].starx and humans[i5].humy==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==stars[i].starx and objs[i6].ity==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
stars.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==stars[i].starx and projectiles[i7].proy==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==stars[i].starx and robots[i8].roby==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==stars[i].starx and signs[i9].signy==stars[i].stary and signs[i9].destroyable==true)
{
starpool.destroy_sound(stars[i].starsound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
stars.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=stars[i].starx and spikes[i10].maxx>=stars[i].starx and spikes[i10].miny<=stars[i].stary and spikes[i10].maxy>=stars[i].stary and spikes[i10].destroyable==true)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==stars[i].starx and turrets[i11].tury==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==stars[i].starx and vehicles[i12].vehy==stars[i].stary and vehicles[i12].moveable==false)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=stars[i].starx and dest_walls[i13].maxx>=stars[i].starx and dest_walls[i13].miny<=stars[i].stary and dest_walls[i13].maxy>=stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==stars[i].starx and zombies[i14].zomby==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==stars[i].starx and psdoors[i15].starty==stars[i].stary and psdoors[i15].destroyable==true)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==stars[i].starx and bosses[i16].bossy==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==stars[i].starx and helpers[i17].helpy==stars[i].stary)
{
starpool.destroy_sound(stars[i].starsound);
if(wephitsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*hit*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) stars[i].wepsound=starpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+stars[i].startype+"/"+stars[i].startype2+"/*shell*"),me.x,me.y,stars[i].starx,stars[i].stary,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=stars[i].damage;
stars.remove_at(i);
return;
}
}
}
}
void spawn_star(int x,int y,int range,int range2,int damage,int speed,string direction,string startype,string startype2)
{
star bl1(x,y,range,range2,damage,speed,direction,startype,startype2);
stars.insert_last(bl1);
}
void destroy_all_stars()
{
for(uint i=0; i<stars.length(); i++)
{
starpool.destroy_sound(stars[i].starsound);
}
stars.resize(0);
}

water@[]waters(0);
class water
{
int watersound, wepsound;
int waterx;
int watery;
int range;
int range2;
int damage;
int speed;
string direction;
string startype;
string startype2;
timer speedtimer;
water(int wtx,int wty,int wtr,int wtr2,int dmg,int sp,string dr,string wtt,string wtt2)
{
waterx=wtx;
watery=wty;
range=wtr;
range2=wtr2;
damage=dmg;
speed=sp;
direction=dr;
startype=wtt;
startype2=wtt2;
if(weploopsound==1) watersound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+startype+"/"+startype2+"/*loop*"),me.x,me.y,waterx,watery,0,0,0,0,true,0,0,weaponvolume,weaponpitch,false);
}
void water_bounce()
{
if(direction=="right")
direction="left";
else if(direction=="left")
direction="right";
else if(direction=="up")
direction="down";
else if(direction=="down")
direction="up";
}
}
void waterloop()
{
for(uint i=0; i<waters.length(); i++)
{
if(waters[i].speedtimer.elapsed>=waters[i].speed)
{
waterpool.update_sound_2d(waters[i].watersound,waters[i].waterx,waters[i].watery);
waters[i].speedtimer.restart();
if(waters[i].direction=="right")
{
waters[i].waterx++;
}
if(waters[i].direction=="left")
{
waters[i].waterx--;
}
if(waters[i].direction=="up")
{
waters[i].watery++;
}
if(waters[i].direction=="down")
{
waters[i].watery--;
}
if(string_contains(gmt(waters[i].waterx,waters[i].watery),"wall",1)>-1)
{
waterpool.destroy_sound(waters[i].watersound);
if(weprecsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*rico*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
waters[i].water_bounce();
}
if(me.x==waters[i].waterx and me.y==waters[i].watery and shieldon==1 and invehicle==false)
{
waterpool.destroy_sound(waters[i].watersound);
if(shieldhitsound==1) shieldslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/equipments/shields/"+shieldtype+"/*hit*"),false,0,0,shieldvolume,shieldpitch,false);
shieldstrength-=waters[i].damage-shielddefence;
waters.remove_at(i);
return;
}
else if(me.x==waters[i].waterx and me.y==waters[i].watery and shieldon==0 and invehicle==false)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(charhurtsound==1) painslot=p.play_stationary_extended(find_sound("sounds/"+soundpack+"/characters/"+chartype+"/*hurt*"),false,0,0,painvolume,painpitch,false);
health-=waters[i].damage-defence;
hearttime-=waters[i].damage-defence;
waters.remove_at(i);
return;
}
if(absolute(waters[i].waterx-me.x)>waters[i].range or absolute(waters[i].watery-me.y)>waters[i].range2)
{
waterpool.destroy_sound(waters[i].watersound);
waters.remove_at(i);
return;
}
}
for(uint i1=0; i1<animals.length(); i1++)
{
if(animals[i1].amx==waters[i].waterx and animals[i1].amy==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
animals[i1].hurtsound=animalpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/animals/"+animals[i1].animaltype+"/*hurt*"),me.x,me.y,animals[i1].amx,animals[i1].amy,0,0,0,0,false,0,0,painvolume,painpitch,false);
animals[i1].animalhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i2=0; i2<calanders.length(); i2++)
{
if(calanders[i2].calanderx==waters[i].waterx and calanders[i2].calandery==waters[i].watery and calanders[i2].destroyable==true)
{
waterpool.destroy_sound(waters[i].watersound);
calpool.destroy_sound(calanders[i2].calandersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
calanders[i2].hurtsound=calpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/calanders/"+calanders[i2].calandertype+"/*break*"),me.x,me.y,calanders[i2].calanderx,calanders[i2].calandery,0,0,0,0,false,0,0,itemvolume,itempitch,false);
waters.remove_at(i);
calanders.remove_at(i2);
return;
}
}
for(uint i3=0; i3<clocks.length(); i3++)
{
if(clocks[i3].clockx==waters[i].waterx and clocks[i3].clocky==waters[i].watery and clocks[i3].destroyable==true)
{
waterpool.destroy_sound(waters[i].watersound);
clockpool.destroy_sound(clocks[i].clocksound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
clocks[i3].hurtsound=clockpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/clocks/"+clocks[i3].clocktype+"/*break*"),me.x,me.y,clocks[i3].clockx,clocks[i3].clocky,0,0,0,0,false,0,0,itemvolume,itempitch,false);
waters.remove_at(i);
clocks.remove_at(i3);
return;
}
}
for(uint i4=0; i4<doors.length(); i4++)
{
if(doors[i4].startx==waters[i].waterx and doors[i4].starty==waters[i].watery and doors[i4].destroyable==true)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
doors[i4].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+doors[i4].desttype+"/*hurt*"),me.x,me.y,doors[i4].startx,doors[i4].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
doors[i4].doorhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i5=0; i5<humans.length(); i5++)
{
if(humans[i5].humx==waters[i].waterx and humans[i5].humy==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
humans[i5].hurtsound=humanpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/humans/"+humans[i5].humantype+"/*hurt*"),me.x,me.y,humans[i5].humx,humans[i5].humy,0,0,0,0,false,0,0,painvolume,painpitch,false);
humans[i5].humanhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i6=0; i6<objs.length(); i6++)
{
if(objs[i6].itx==waters[i].waterx and objs[i6].ity==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
itempool.destroy_sound(objs[i6].objsound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
objs[i6].hurtsound=itempool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/items/unsorted/"+objs[i6].objtype+"/"+objs[i6].objtype2+"/*break*"),me.x,me.y,objs[i6].itx,objs[i6].ity,0,0,0,0,false,0,0,itemvolume,itempitch,false);
waters.remove_at(i);
objs.remove_at(i6);
return;
}
}
for(uint i7=0; i7<projectiles.length(); i7++)
{
if(projectiles[i7].prox==waters[i].waterx and projectiles[i7].proy==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
projectiles[i7].hurtsound=projpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/projectiles/"+projectiles[i7].projtype+"/*hurt*"),me.x,me.y,projectiles[i7].prox,projectiles[i7].proy,0,0,0,0,false,0,0,painvolume,painpitch,false);
projectiles[i7].projhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i8=0; i8<robots.length(); i8++)
{
if(robots[i8].robx==waters[i].waterx and robots[i8].roby==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
robots[i8].hurtsound=robpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/robots/"+robots[i8].robottype+"/*hurt*"),me.x,me.y,robots[i8].robx,robots[i8].roby,0,0,0,0,false,0,0,painvolume,painpitch,false);
robots[i8].robothealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i9=0; i9<signs.length(); i9++)
{
if(signs[i9].signx==waters[i].waterx and signs[i9].signy==waters[i].watery and signs[i9].destroyable==true)
{
waterpool.destroy_sound(waters[i].watersound);
signpool.destroy_sound(signs[i9].signsound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
signs[i9].hurtsound=signpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/signs/"+signs[i9].signtype+"/*break*"),me.x,me.y,signs[i9].signx,signs[i9].signy,0,0,0,0,false,0,0,itemvolume,itempitch,false);
waters.remove_at(i);
signs.remove_at(i9);
return;
}
}
for(uint i10=0; i10<spikes.length(); i10++)
{
if(spikes[i10].minx<=waters[i].waterx and spikes[i10].maxx>=waters[i].waterx and spikes[i10].miny<=waters[i].watery and spikes[i10].maxy>=waters[i].watery and spikes[i10].destroyable==true)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
spikes[i10].hurtsound=spikepool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/spikes/"+spikes[i10].spiketype+"/*hurt*"),me.x,me.y,spikes[i10].minx,spikes[i10].miny,0,0,0,0,false,0,0,painvolume,painpitch,false);
spikepool.update_sound_2d(spikes[i10].hurtsound,spikes[i10].minx,spikes[i10].miny);
spikepool.update_sound_range_2d(spikes[i10].hurtsound, 0, spikes[i10].maxx-spikes[i10].minx, 0, spikes[i10].maxy-spikes[i10].miny);
spikes[i10].spikehealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i11=0; i11<turrets.length(); i11++)
{
if(turrets[i11].turx==waters[i].waterx and turrets[i11].tury==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
turrets[i11].hurtsound=turpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/turrets/"+turrets[i11].turtype+"/*hurt*"),me.x,me.y,turrets[i11].turx,turrets[i11].tury,0,0,0,0,false,0,0,painvolume,painpitch,false);
turrets[i11].turhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i12=0; i12<vehicles.length(); i12++)
{
if(vehicles[i12].vehx==waters[i].waterx and vehicles[i12].vehy==waters[i].watery and vehicles[i12].moveable==false)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
vehicles[i12].hurtsound=vehpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/vehicles/"+vehicles[i12].vehtype+"/*hurt*"),me.x,me.y,vehicles[i12].vehx,vehicles[i12].vehy,0,0,0,0,false,0,0,painvolume,painpitch,false);
vehicles[i12].vehhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i13=0; i13<dest_walls.length(); i13++)
{
if(dest_walls[i13].minx<=waters[i].waterx and dest_walls[i13].maxx>=waters[i].waterx and dest_walls[i13].miny<=waters[i].watery and dest_walls[i13].maxy>=waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
dest_walls[i13].hurtsound=p.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/walls/"+dest_walls[i13].dest_wall+"/*hurt*"),me.x,me.y,dest_walls[i13].minx,dest_walls[i13].miny,0,0,0,0,false,0,0,wallvolume,wallpitch,false);
p.update_sound_2d(dest_walls[i13].hurtsound,dest_walls[i13].minx,dest_walls[i13].miny);
p.update_sound_range_2d(dest_walls[i13].hurtsound, 0, dest_walls[i13].maxx-dest_walls[i13].minx, 0, dest_walls[i13].maxy-dest_walls[i13].miny);
dest_walls[i13].dest_wallhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i14=0; i14<zombies.length(); i14++)
{
if(zombies[i14].zombx==waters[i].waterx and zombies[i14].zomby==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
zombies[i14].hurtsound=zombpool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/normal/zombies/"+zombies[i14].zombietype+"/*hurt*"),me.x,me.y,zombies[i14].zombx,zombies[i14].zomby,0,0,0,0,false,0,0,painvolume,painpitch,false);
zombies[i14].zombiehealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i15=0; i15<psdoors.length(); i15++)
{
if(psdoors[i15].startx==waters[i].waterx and psdoors[i15].starty==waters[i].watery and psdoors[i15].destroyable==true)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
psdoors[i15].hurtsound=doorpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/doors/dest/"+psdoors[i15].desttype+"/*hurt*"),me.x,me.y,psdoors[i15].startx,psdoors[i15].starty,0,0,0,0,false,0,0,doorvolume,doorpitch,false);
psdoors[i15].psdoorhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i16=0; i16<bosses.length(); i16++)
{
if(bosses[i16].bossx==waters[i].waterx and bosses[i16].bossy==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
bosses[i16].hurtsound=bosspool.play_extended_2d(find_sound("sounds/"+soundpack+"/npc/boss/"+bosses[i16].bosstype+"/*hurt*"),me.x,me.y,bosses[i16].bossx,bosses[i16].bossy,0,0,0,0,false,0,0,painvolume,painpitch,false);
bosses[i16].bosshealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
for(uint i17=0; i17<helpers.length(); i17++)
{
if(helpers[i17].helpx==waters[i].waterx and helpers[i17].helpy==waters[i].watery)
{
waterpool.destroy_sound(waters[i].watersound);
if(wephitsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*hit*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
if(wepshellsound==1) waters[i].wepsound=waterpool.play_extended_2d(find_sound("sounds/"+soundpack+"/equipments/weapons/"+waters[i].startype+"/"+waters[i].startype2+"/*shell*"),me.x,me.y,waters[i].waterx,waters[i].watery,0,0,0,0,false,0,0,weaponvolume,weaponpitch,false);
helpers[i17].hurtsound=helperpool.play_extended_2d(find_sound("sounds/"+soundpack+"/objects/helpers/"+helpers[i17].helpertype+"/*hurt*"),me.x,me.y,helpers[i17].helpx,helpers[i17].helpy,0,0,0,0,false,0,0,painvolume,painpitch,false);
helpers[i17].helperhealth-=waters[i].damage;
waters.remove_at(i);
return;
}
}
}
}
void spawn_water(int x,int y,int range,int range2,int damage,int speed,string direction,string startype,string startype2)
{
water bl1(x,y,range,range2,damage,speed,direction,startype,startype2);
waters.insert_last(bl1);
}
void destroy_all_waters()
{
for(uint i=0; i<waters.length(); i++)
{
waterpool.destroy_sound(waters[i].watersound);
}
waters.resize(0);
}
